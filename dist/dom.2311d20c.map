{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.2311d20c.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string) {//创建一个节点\r\n        const container =  document.createElement(\"template\");//template标签可以容纳所有标签\r\n        container.innerHTML = string.trim();//trim()过滤掉空格\r\n        return container.content.firstChild;//使用template标签就要用.content.firstChild方法\r\n    },\r\n    after(node, node2){//新增一个弟弟\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },\r\n    before(node, node2){//新增一个哥哥\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n    append(parent, node){//新增一个儿子\r\n        parent.appendChild(node);\r\n    },\r\n    wrap(node, parent){//新增一个爸爸\r\n        dom.before(node, parent);//先把parent放在node前面\r\n        dom.append(parent, node);//再把node变成parent的儿子\r\n    },\r\n    remove(node){//删除节点\r\n        node.parentNode.removeChild(node);\r\n        return node;\r\n    },\r\n    empty(node){\r\n        const {childNodes} = node;//等价于const chileNodes = node.childNodes\r\n        const array = [];\r\n        let x = node.firstChild;\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild));\r\n            x = node.firstChild\r\n        }\r\n        //因childNodes.length时时改变，for循环不适用\r\n        // for (let i = 0; i < childNodes.length; i++) {\r\n        //     dom.remove(childNodes[i]);\r\n        //     array.push(childNodes[i]);\r\n        // }\r\n        return array;\r\n    },\r\n    attr(node, name, value){//重载\r\n        if(arguments.length === 3){\r\n            //3个参数就是创建\r\n            node.setAttribute(name,value);\r\n        } else if(arguments.length === 2){\r\n            //2个参数就是获取\r\n            return node.getAttribute(name);\r\n        }        \r\n    },\r\n    text(node, string){//适配\r\n        if(arguments.length === 2){\r\n            if('innerText' in node){\r\n                node.innerText = string;//ie\r\n            } else {\r\n                node.textContent = string;//firefox / Chrome\r\n            }\r\n        } else if(arguments.length === 1){\r\n            if('innerText' in node){\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }          \r\n    },\r\n    html(node, string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string;\r\n        } else if(arguments.length === 1){\r\n            return node.innerHTML;\r\n        }\r\n    },\r\n    style(node, name, value){\r\n        if(arguments.length === 3){\r\n            // dom.style(div, 'color', 'red')\r\n            node.style[name] = value;\r\n        }else if(arguments.length === 2){\r\n            if(typeof name === 'string'){\r\n                // dom.style(div, 'color')\r\n                return node.style[name];\r\n            } else if(name instanceof Object){\r\n                // dom.style(test, {border: '1px solid red', color: 'blue'});\r\n                const object = name;\r\n                for (let key in object) {\r\n                    node.style[key] = object[key];\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class: {\r\n        add(node, className){\r\n            node.classList.add(className);\r\n        },\r\n        remove(node, className){\r\n            node.classList.remove(className);\r\n        },\r\n        has(node, className){\r\n            return node.classList.contains(className);\r\n        }\r\n    },\r\n    on(node, eventName, fn){\r\n        node.addEventListener(eventName, fn);\r\n    },\r\n    off(node, eventName, fn){\r\n        node.removeEventListener(eventName, fn);\r\n    },\r\n    find(selector, scope){\r\n        return (scope || document).querySelectorAll(selector);\r\n    },\r\n    parent(node){\r\n        return node.parentNode;\r\n    },\r\n    children(node){\r\n        return node.children;\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children).filter(n => n !== node);\r\n    },\r\n    next(node){\r\n        let x = node.nextSibling;\r\n        while(x && x.nodeType === 3){\r\n            x = x.nextSibling;\r\n        }\r\n        return x;\r\n    },\r\n    previous(node){\r\n        let x = node.previousSibling;\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling;\r\n        }\r\n        return x;\r\n    },\r\n    each(nodeList, fn){\r\n        for(let i=0;i<nodeList.length;i++){\r\n          fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n        const list = dom.children(node.parentNode);\r\n        let i\r\n        for(i=0;i<list.length;i++){\r\n            if(list[i] === node)\r\n            break;\r\n        }\r\n        return 1;\r\n    }\r\n};"]}